%hyperhelp title="Integrating HyperHelp" date="2019-03-25"


# _none:Integrating  HyperHelp into your Package
==========================================

One of the core design goals of HyperHelp is to be as easy as possible to
integrate with any package in order to promote a simple, easily accessible and
useful help system that provides consistency for the user.

Follow this simple set of steps in order to add HyperHelp support to your
package:


    ## _none:Step 1: Author your Help
    ---------------------------

    You've now told Package Control that your package depends on HyperHelp so
    that it will be installed, and you've told HyperHelp at load time that it
    should check and verify that everything is running, so all that's left is
    to write your help.

    This is likely the hardest part of the entire operation. There is more
    information on creating help in |authoring.txt|. You may also find
    |syntax.txt| useful as a guide to the help file syntax.


    ## _none:Step 4: Implement context sensitive help (optional)
    ------------------------------------------------------

    Although not strictly required, the power of HyperHelp allows you to create
    customized, context sensitive help for your package or help system by using
    the built in |commands|, |key contexts| and |api|.

    These allow you to include things like a custom key bindings or commands
    that jump directly from something in your package directly to associated
    help, and so on.
